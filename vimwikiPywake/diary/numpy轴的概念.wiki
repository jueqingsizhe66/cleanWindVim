https://mp.weixin.qq.com/s/Dopa_xc7WOK4edvyWf3NMQ
NumPy 中的轴简单来说就是方向的意思，使用数字 0、1、2 表示，一维数组只有 0 轴，二维数组有 0、1 轴，三维数组有 0、1、2 轴，了解轴的相应概念可以方便我们进行相应计算。

= numpy可以把矩阵做降维和升维 =

{{{

import numpy as np

arr = np.arange(12).reshape(3, 4)
print(arr)
# 取某一个值
print(arr[2, 3])
# 取多个不连续的值
print(arr[[0, 2],[1, 3]])
# 取一行
print(arr[0])
# 连续取多行
print(arr[1:])
# 取不连续的多行
print(arr[[0, 2]])
# 取一列
print(arr[:, 0])
# 连续取多列
print(arr[:, 2:])
[[#]] 取不连续的多列
print(arr[:, [0, 2]])
  }}}

= 添加操作 =


{{{

NumPy 的 append() 方法可以在数组的末尾添加值，该操作会分配至整个数组，并把原数组复制到新数组，该操作需保证输入的维度匹配，下面看一下使用示例。

import numpy as np

arr = np.array([[1, 3, 5], [2, 4, 6]])
# 添加元素
print(np.append(arr, [1, 1, 3]))
# 沿 0 轴添加元素
print(np.append(arr, [[1, 1, 3]], axis=0))
# 沿 1 轴添加元素
print(np.append(arr, [[1, 1, 3], [2, 1, 5]], axis=1))
我们还可以使用 insert() 方法进行添加操作，该方法在给定索引前沿给定轴向数组中插入值，下面看一下使用示例。
}}}

= 添加元素 =

{{{

import numpy as np

arr = np.array([[1, 3, 5], [2, 4, 6]])
# 添加元素
print(np.insert(arr, 1, [1, 1, 3]))
# 沿 0 轴添加元素
print(np.insert(arr, 1, [1, 1, 3], axis=0))
# 沿 1 轴添加元素
print(np.insert(arr, 1, [1, 5], axis=1))

}}}

= 增加轴元素 =

{{{
    print(np.append(arr2,[[1,3,4]],axis=0).shape)
    (3, 3)
    print(arr2.shape)
    (2, 3)
}}}

= 总结 =

如果不加上axis，那么原始矩阵形态会变为长数组，而不是具备一定shape的数组
只有加上axis的增删才会保持矩阵形态。
{{{
    arr2
    Out[64]: 
    array([[1, 3, 5],
       [2, 4, 6]])
       
    np.insert(arr2,1,[0,1,1],axis=0)
    Out[61]: 
    array([[1, 3, 5],
       [0, 1, 1],
       [2, 4, 6]])

    np.insert(arr2,1,[1,5],axis=1)
    Out[63]: 
    array([[1, 1, 3, 5],
       [2, 5, 4, 6]])
}}}
